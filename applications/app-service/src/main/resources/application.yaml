server:
  port: 8082
spring:
  main:
    web-application-type: "reactive"
  webflux:
    base-path: "/report/api/v1"
  application:
    name: "reportes"
  devtools:
    add-properties: false
  h2:
    console:
      enabled: true
      path: "/h2"
  profiles:
    include: null
    active: "pdn"
entrypoint:
  sqs:
    region: "${SQS_R_A_REGION}"
    queues:
      aprobadas:
        queueUrl: "${SQS_REPORTE_APROBADA}"
        processorBean: aprobadasProcessor
        waitTimeSeconds: 20
        visibilityTimeoutSeconds: 30
        maxNumberOfMessages: 10
        numberOfThreads: 2
      reporteDiario:
        queueUrl: "${SQS_REPORTE_DIARIO}"
        processorBean: sqsReporteDiarioProcessor
        waitTimeSeconds: 20
        visibilityTimeoutSeconds: 30
        maxNumberOfMessages: 10
        numberOfThreads: 2
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4200,http://localhost:8080"
adapter:
  restconsumer:
    timeout: 5000
    url: "${SERVICE_AUTH_URL}"
  sqs:
    region: "us-east-2"
    queueUrl: "${SQS_NOTIFICACION}"
    to: "${EMAIL_TO_ADMIN}"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
aws:
  dynamodb:
    endpoint: ""
  region: "${DYNAMO_R_REGION}"
